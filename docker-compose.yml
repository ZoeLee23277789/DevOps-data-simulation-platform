version: '3.9'
services:
  mongo:
    image: mongo
    ports:
      - "27017:27017"
    networks:
      - tsmc_network

  flask_api:
    build: ./API
    ports:
      - "5000:5000"
    depends_on:
      - mongo
    volumes:
      - ./API:/app
    networks:
      - tsmc_network

  sensor:
    build: ./Sensor
    depends_on:
      - flask_api
    networks:
      - tsmc_network

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - tsmc_network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - tsmc_network

  airflow-init:
    build: ./airflow
    volumes:
      - airflow_db:/opt/airflow
      - ./airflow/dags:/opt/airflow/dags
      - ./exported_reports:/opt/airflow/exported_reports
    entrypoint: >
      bash -c "
        airflow db init &&
        airflow db migrate &&
        airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin
      "
    networks:
      - tsmc_network

  airflow:
    build: ./airflow
    restart: always
    depends_on:
      - mongo
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - airflow_db:/opt/airflow
      - ./airflow/dags:/opt/airflow/dags
      - ./exported_reports:/opt/airflow/exported_reports
      - airflow_logs:/opt/airflow/logs
    command: >
      bash -c "
        airflow db upgrade &&
        airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin &&
        airflow webserver
      "
    ports:
      - "8080:8080"
    networks:
      - tsmc_network

  airflow-scheduler:
    build: ./airflow
    restart: always
    depends_on:
      - airflow
    volumes:
      - airflow_db:/opt/airflow
      - ./airflow/dags:/opt/airflow/dags
      - ./exported_reports:/opt/airflow/exported_reports
      - airflow_logs:/opt/airflow/logs
    command: scheduler
    networks:
      - tsmc_network

networks:
  tsmc_network:
    driver: bridge

volumes:
  grafana-storage:
  airflow_logs:
  airflow_db:
